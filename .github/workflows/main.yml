name: TestAndReportAction
permissions: 
  contents: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          mkdir -p ./.test_files
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run and clean bot
        run: |
          python ./bot.py > ./.test_files/run.log 2>&1 & sleep 15 && pkill -f "python ./bot.py"
          sed -i 's/\x1b\[[0-9;]*m//g' ./.test_files/run.log
        continue-on-error: true

      - name: Create release notes
        run: |
          mkdir -p ./.test_files
          HITOKOTO=$(curl "https://v1.hitokoto.cn/?encode=text")
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo -e "Commit message:\n\`\`\`$COMMIT_MESSAGE\n\`\`\`" > ./.test_files/release_notes.txt
          echo -e "log:\n\`\`\`log" >> ./.test_files/release_notes.txt
          cat ./.test_files/run.log >> ./.test_files/release_notes.txt
          echo -e "\n\`\`\`" >> ./.test_files/release_notes.txt
          echo "Auto Test by [@Starry-Sky-World](https://github.com/Starry-Sky-World)" >> ./.test_files/release_notes.txt
          COMMIT_HASH=$(git rev-parse HEAD)
          echo "Commit hash: $COMMIT_HASH" >> ./.test_files/release_notes.txt
          echo -e "\n---\n" >> ./.test_files/release_notes.txt
          echo "$HITOKOTO" >> ./.test_files/release_notes.txt

      - name: Create timestamp
        id: vars
        run: echo "RELEASE_TAG=$(date +'%Y%m%d%H%M%S')_TestReportRelease" >> $GITHUB_ENV

      - name: Configure git user
        run: |
          git config --global user.name "CMC-WorkFlow[bot]"
          git config --global user.email "CMC-WorkFlow[bot]@users.noreply.github.com"

      - name: Install GitHub CLI
        run: |
          sudo apt-get install -y gh
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token

      - name: Create and push release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag_name=${{ env.RELEASE_TAG }}
          release_name="Test Report Release $tag_name"
          release_body=$(cat ./.test_files/release_notes.txt)
          git tag -a $tag_name -m "$release_name"
          git push origin $tag_name
          gh release create $tag_name --title "$release_name" --notes "$release_body"
